# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/prediction.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/prediction.proto',
  package='seldon.protos',
  syntax='proto3',
  serialized_pb=_b('\n\x16proto/prediction.proto\x12\rseldon.protos\x1a\x1cgoogle/protobuf/struct.proto\"\xb9\x01\n\rSeldonMessage\x12%\n\x06status\x18\x01 \x01(\x0b\x32\x15.seldon.protos.Status\x12!\n\x04meta\x18\x02 \x01(\x0b\x32\x13.seldon.protos.Meta\x12*\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x1a.seldon.protos.DefaultDataH\x00\x12\x11\n\x07\x62inData\x18\x04 \x01(\x0cH\x00\x12\x11\n\x07strData\x18\x05 \x01(\tH\x00\x42\x0c\n\ndata_oneof\"\x82\x01\n\x0b\x44\x65\x66\x61ultData\x12\r\n\x05names\x18\x01 \x03(\t\x12\'\n\x06tensor\x18\x02 \x01(\x0b\x32\x15.seldon.protos.TensorH\x00\x12-\n\x07ndarray\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.ListValueH\x00\x42\x0c\n\ndata_oneof\"/\n\x06Tensor\x12\x11\n\x05shape\x18\x01 \x03(\x05\x42\x02\x10\x01\x12\x12\n\x06values\x18\x02 \x03(\x01\x42\x02\x10\x01\"\xe9\x01\n\x04Meta\x12\x0c\n\x04puid\x18\x01 \x01(\t\x12+\n\x04tags\x18\x02 \x03(\x0b\x32\x1d.seldon.protos.Meta.TagsEntry\x12\x31\n\x07routing\x18\x03 \x03(\x0b\x32 .seldon.protos.Meta.RoutingEntry\x1a\x43\n\tTagsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12%\n\x05value\x18\x02 \x01(\x0b\x32\x16.google.protobuf.Value:\x02\x38\x01\x1a.\n\x0cRoutingEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"I\n\x11SeldonMessageList\x12\x34\n\x0eseldonMessages\x18\x01 \x03(\x0b\x32\x1c.seldon.protos.SeldonMessage\"\x8e\x01\n\x06Status\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0c\n\x04info\x18\x02 \x01(\t\x12\x0e\n\x06reason\x18\x03 \x01(\t\x12\x30\n\x06status\x18\x04 \x01(\x0e\x32 .seldon.protos.Status.StatusFlag\"&\n\nStatusFlag\x12\x0b\n\x07SUCCESS\x10\x00\x12\x0b\n\x07\x46\x41ILURE\x10\x01\"\xa6\x01\n\x08\x46\x65\x65\x64\x62\x61\x63k\x12-\n\x07request\x18\x01 \x01(\x0b\x32\x1c.seldon.protos.SeldonMessage\x12.\n\x08response\x18\x02 \x01(\x0b\x32\x1c.seldon.protos.SeldonMessage\x12\x0e\n\x06reward\x18\x03 \x01(\x02\x12+\n\x05truth\x18\x04 \x01(\x0b\x32\x1c.seldon.protos.SeldonMessage\"p\n\x0fRequestResponse\x12-\n\x07request\x18\x01 \x01(\x0b\x32\x1c.seldon.protos.SeldonMessage\x12.\n\x08response\x18\x02 \x01(\x0b\x32\x1c.seldon.protos.SeldonMessage2\x89\x03\n\x07Generic\x12N\n\x0eTransformInput\x12\x1c.seldon.protos.SeldonMessage\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x12O\n\x0fTransformOutput\x12\x1c.seldon.protos.SeldonMessage\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x12\x45\n\x05Route\x12\x1c.seldon.protos.SeldonMessage\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x12M\n\tAggregate\x12 .seldon.protos.SeldonMessageList\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x12G\n\x0cSendFeedback\x12\x17.seldon.protos.Feedback\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x32P\n\x05Model\x12G\n\x07Predict\x12\x1c.seldon.protos.SeldonMessage\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x32\x98\x01\n\x06Router\x12\x45\n\x05Route\x12\x1c.seldon.protos.SeldonMessage\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x12G\n\x0cSendFeedback\x12\x17.seldon.protos.Feedback\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x32]\n\x0bTransformer\x12N\n\x0eTransformInput\x12\x1c.seldon.protos.SeldonMessage\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x32\x64\n\x11OutputTransformer\x12O\n\x0fTransformOutput\x12\x1c.seldon.protos.SeldonMessage\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x32Y\n\x08\x43ombiner\x12M\n\tAggregate\x12 .seldon.protos.SeldonMessageList\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x32\x9a\x01\n\x06Seldon\x12G\n\x07Predict\x12\x1c.seldon.protos.SeldonMessage\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x12G\n\x0cSendFeedback\x12\x17.seldon.protos.Feedback\x1a\x1c.seldon.protos.SeldonMessage\"\x00\x42$\n\x10io.seldon.protosB\x10PredictionProtosb\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_STATUS_STATUSFLAG = _descriptor.EnumDescriptor(
  name='StatusFlag',
  full_name='seldon.protos.Status.StatusFlag',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILURE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=857,
  serialized_end=895,
)
_sym_db.RegisterEnumDescriptor(_STATUS_STATUSFLAG)


_SELDONMESSAGE = _descriptor.Descriptor(
  name='SeldonMessage',
  full_name='seldon.protos.SeldonMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='seldon.protos.SeldonMessage.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='meta', full_name='seldon.protos.SeldonMessage.meta', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='seldon.protos.SeldonMessage.data', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='binData', full_name='seldon.protos.SeldonMessage.binData', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='strData', full_name='seldon.protos.SeldonMessage.strData', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='data_oneof', full_name='seldon.protos.SeldonMessage.data_oneof',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=72,
  serialized_end=257,
)


_DEFAULTDATA = _descriptor.Descriptor(
  name='DefaultData',
  full_name='seldon.protos.DefaultData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='names', full_name='seldon.protos.DefaultData.names', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tensor', full_name='seldon.protos.DefaultData.tensor', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ndarray', full_name='seldon.protos.DefaultData.ndarray', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='data_oneof', full_name='seldon.protos.DefaultData.data_oneof',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=260,
  serialized_end=390,
)


_TENSOR = _descriptor.Descriptor(
  name='Tensor',
  full_name='seldon.protos.Tensor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shape', full_name='seldon.protos.Tensor.shape', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='values', full_name='seldon.protos.Tensor.values', index=1,
      number=2, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=392,
  serialized_end=439,
)


_META_TAGSENTRY = _descriptor.Descriptor(
  name='TagsEntry',
  full_name='seldon.protos.Meta.TagsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='seldon.protos.Meta.TagsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='seldon.protos.Meta.TagsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=560,
  serialized_end=627,
)

_META_ROUTINGENTRY = _descriptor.Descriptor(
  name='RoutingEntry',
  full_name='seldon.protos.Meta.RoutingEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='seldon.protos.Meta.RoutingEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='seldon.protos.Meta.RoutingEntry.value', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=629,
  serialized_end=675,
)

_META = _descriptor.Descriptor(
  name='Meta',
  full_name='seldon.protos.Meta',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='puid', full_name='seldon.protos.Meta.puid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tags', full_name='seldon.protos.Meta.tags', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='routing', full_name='seldon.protos.Meta.routing', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_META_TAGSENTRY, _META_ROUTINGENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=442,
  serialized_end=675,
)


_SELDONMESSAGELIST = _descriptor.Descriptor(
  name='SeldonMessageList',
  full_name='seldon.protos.SeldonMessageList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='seldonMessages', full_name='seldon.protos.SeldonMessageList.seldonMessages', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=677,
  serialized_end=750,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='seldon.protos.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='seldon.protos.Status.code', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='info', full_name='seldon.protos.Status.info', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reason', full_name='seldon.protos.Status.reason', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='seldon.protos.Status.status', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STATUS_STATUSFLAG,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=753,
  serialized_end=895,
)


_FEEDBACK = _descriptor.Descriptor(
  name='Feedback',
  full_name='seldon.protos.Feedback',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request', full_name='seldon.protos.Feedback.request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response', full_name='seldon.protos.Feedback.response', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reward', full_name='seldon.protos.Feedback.reward', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='truth', full_name='seldon.protos.Feedback.truth', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=898,
  serialized_end=1064,
)


_REQUESTRESPONSE = _descriptor.Descriptor(
  name='RequestResponse',
  full_name='seldon.protos.RequestResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request', full_name='seldon.protos.RequestResponse.request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response', full_name='seldon.protos.RequestResponse.response', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1066,
  serialized_end=1178,
)

_SELDONMESSAGE.fields_by_name['status'].message_type = _STATUS
_SELDONMESSAGE.fields_by_name['meta'].message_type = _META
_SELDONMESSAGE.fields_by_name['data'].message_type = _DEFAULTDATA
_SELDONMESSAGE.oneofs_by_name['data_oneof'].fields.append(
  _SELDONMESSAGE.fields_by_name['data'])
_SELDONMESSAGE.fields_by_name['data'].containing_oneof = _SELDONMESSAGE.oneofs_by_name['data_oneof']
_SELDONMESSAGE.oneofs_by_name['data_oneof'].fields.append(
  _SELDONMESSAGE.fields_by_name['binData'])
_SELDONMESSAGE.fields_by_name['binData'].containing_oneof = _SELDONMESSAGE.oneofs_by_name['data_oneof']
_SELDONMESSAGE.oneofs_by_name['data_oneof'].fields.append(
  _SELDONMESSAGE.fields_by_name['strData'])
_SELDONMESSAGE.fields_by_name['strData'].containing_oneof = _SELDONMESSAGE.oneofs_by_name['data_oneof']
_DEFAULTDATA.fields_by_name['tensor'].message_type = _TENSOR
_DEFAULTDATA.fields_by_name['ndarray'].message_type = google_dot_protobuf_dot_struct__pb2._LISTVALUE
_DEFAULTDATA.oneofs_by_name['data_oneof'].fields.append(
  _DEFAULTDATA.fields_by_name['tensor'])
_DEFAULTDATA.fields_by_name['tensor'].containing_oneof = _DEFAULTDATA.oneofs_by_name['data_oneof']
_DEFAULTDATA.oneofs_by_name['data_oneof'].fields.append(
  _DEFAULTDATA.fields_by_name['ndarray'])
_DEFAULTDATA.fields_by_name['ndarray'].containing_oneof = _DEFAULTDATA.oneofs_by_name['data_oneof']
_META_TAGSENTRY.fields_by_name['value'].message_type = google_dot_protobuf_dot_struct__pb2._VALUE
_META_TAGSENTRY.containing_type = _META
_META_ROUTINGENTRY.containing_type = _META
_META.fields_by_name['tags'].message_type = _META_TAGSENTRY
_META.fields_by_name['routing'].message_type = _META_ROUTINGENTRY
_SELDONMESSAGELIST.fields_by_name['seldonMessages'].message_type = _SELDONMESSAGE
_STATUS.fields_by_name['status'].enum_type = _STATUS_STATUSFLAG
_STATUS_STATUSFLAG.containing_type = _STATUS
_FEEDBACK.fields_by_name['request'].message_type = _SELDONMESSAGE
_FEEDBACK.fields_by_name['response'].message_type = _SELDONMESSAGE
_FEEDBACK.fields_by_name['truth'].message_type = _SELDONMESSAGE
_REQUESTRESPONSE.fields_by_name['request'].message_type = _SELDONMESSAGE
_REQUESTRESPONSE.fields_by_name['response'].message_type = _SELDONMESSAGE
DESCRIPTOR.message_types_by_name['SeldonMessage'] = _SELDONMESSAGE
DESCRIPTOR.message_types_by_name['DefaultData'] = _DEFAULTDATA
DESCRIPTOR.message_types_by_name['Tensor'] = _TENSOR
DESCRIPTOR.message_types_by_name['Meta'] = _META
DESCRIPTOR.message_types_by_name['SeldonMessageList'] = _SELDONMESSAGELIST
DESCRIPTOR.message_types_by_name['Status'] = _STATUS
DESCRIPTOR.message_types_by_name['Feedback'] = _FEEDBACK
DESCRIPTOR.message_types_by_name['RequestResponse'] = _REQUESTRESPONSE

SeldonMessage = _reflection.GeneratedProtocolMessageType('SeldonMessage', (_message.Message,), dict(
  DESCRIPTOR = _SELDONMESSAGE,
  __module__ = 'proto.prediction_pb2'
  # @@protoc_insertion_point(class_scope:seldon.protos.SeldonMessage)
  ))
_sym_db.RegisterMessage(SeldonMessage)

DefaultData = _reflection.GeneratedProtocolMessageType('DefaultData', (_message.Message,), dict(
  DESCRIPTOR = _DEFAULTDATA,
  __module__ = 'proto.prediction_pb2'
  # @@protoc_insertion_point(class_scope:seldon.protos.DefaultData)
  ))
_sym_db.RegisterMessage(DefaultData)

Tensor = _reflection.GeneratedProtocolMessageType('Tensor', (_message.Message,), dict(
  DESCRIPTOR = _TENSOR,
  __module__ = 'proto.prediction_pb2'
  # @@protoc_insertion_point(class_scope:seldon.protos.Tensor)
  ))
_sym_db.RegisterMessage(Tensor)

Meta = _reflection.GeneratedProtocolMessageType('Meta', (_message.Message,), dict(

  TagsEntry = _reflection.GeneratedProtocolMessageType('TagsEntry', (_message.Message,), dict(
    DESCRIPTOR = _META_TAGSENTRY,
    __module__ = 'proto.prediction_pb2'
    # @@protoc_insertion_point(class_scope:seldon.protos.Meta.TagsEntry)
    ))
  ,

  RoutingEntry = _reflection.GeneratedProtocolMessageType('RoutingEntry', (_message.Message,), dict(
    DESCRIPTOR = _META_ROUTINGENTRY,
    __module__ = 'proto.prediction_pb2'
    # @@protoc_insertion_point(class_scope:seldon.protos.Meta.RoutingEntry)
    ))
  ,
  DESCRIPTOR = _META,
  __module__ = 'proto.prediction_pb2'
  # @@protoc_insertion_point(class_scope:seldon.protos.Meta)
  ))
_sym_db.RegisterMessage(Meta)
_sym_db.RegisterMessage(Meta.TagsEntry)
_sym_db.RegisterMessage(Meta.RoutingEntry)

SeldonMessageList = _reflection.GeneratedProtocolMessageType('SeldonMessageList', (_message.Message,), dict(
  DESCRIPTOR = _SELDONMESSAGELIST,
  __module__ = 'proto.prediction_pb2'
  # @@protoc_insertion_point(class_scope:seldon.protos.SeldonMessageList)
  ))
_sym_db.RegisterMessage(SeldonMessageList)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'proto.prediction_pb2'
  # @@protoc_insertion_point(class_scope:seldon.protos.Status)
  ))
_sym_db.RegisterMessage(Status)

Feedback = _reflection.GeneratedProtocolMessageType('Feedback', (_message.Message,), dict(
  DESCRIPTOR = _FEEDBACK,
  __module__ = 'proto.prediction_pb2'
  # @@protoc_insertion_point(class_scope:seldon.protos.Feedback)
  ))
_sym_db.RegisterMessage(Feedback)

RequestResponse = _reflection.GeneratedProtocolMessageType('RequestResponse', (_message.Message,), dict(
  DESCRIPTOR = _REQUESTRESPONSE,
  __module__ = 'proto.prediction_pb2'
  # @@protoc_insertion_point(class_scope:seldon.protos.RequestResponse)
  ))
_sym_db.RegisterMessage(RequestResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020io.seldon.protosB\020PredictionProtos'))
_TENSOR.fields_by_name['shape'].has_options = True
_TENSOR.fields_by_name['shape']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['values'].has_options = True
_TENSOR.fields_by_name['values']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_META_TAGSENTRY.has_options = True
_META_TAGSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_META_ROUTINGENTRY.has_options = True
_META_ROUTINGENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class GenericStub(object):
    """[END Messages]

    [START Services]

    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.TransformInput = channel.unary_unary(
          '/seldon.protos.Generic/TransformInput',
          request_serializer=SeldonMessage.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )
      self.TransformOutput = channel.unary_unary(
          '/seldon.protos.Generic/TransformOutput',
          request_serializer=SeldonMessage.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )
      self.Route = channel.unary_unary(
          '/seldon.protos.Generic/Route',
          request_serializer=SeldonMessage.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )
      self.Aggregate = channel.unary_unary(
          '/seldon.protos.Generic/Aggregate',
          request_serializer=SeldonMessageList.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )
      self.SendFeedback = channel.unary_unary(
          '/seldon.protos.Generic/SendFeedback',
          request_serializer=Feedback.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )


  class GenericServicer(object):
    """[END Messages]

    [START Services]

    """

    def TransformInput(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def TransformOutput(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Route(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Aggregate(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendFeedback(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_GenericServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'TransformInput': grpc.unary_unary_rpc_method_handler(
            servicer.TransformInput,
            request_deserializer=SeldonMessage.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
        'TransformOutput': grpc.unary_unary_rpc_method_handler(
            servicer.TransformOutput,
            request_deserializer=SeldonMessage.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
        'Route': grpc.unary_unary_rpc_method_handler(
            servicer.Route,
            request_deserializer=SeldonMessage.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
        'Aggregate': grpc.unary_unary_rpc_method_handler(
            servicer.Aggregate,
            request_deserializer=SeldonMessageList.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
        'SendFeedback': grpc.unary_unary_rpc_method_handler(
            servicer.SendFeedback,
            request_deserializer=Feedback.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'seldon.protos.Generic', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class ModelStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Predict = channel.unary_unary(
          '/seldon.protos.Model/Predict',
          request_serializer=SeldonMessage.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )


  class ModelServicer(object):

    def Predict(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ModelServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Predict': grpc.unary_unary_rpc_method_handler(
            servicer.Predict,
            request_deserializer=SeldonMessage.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'seldon.protos.Model', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class RouterStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Route = channel.unary_unary(
          '/seldon.protos.Router/Route',
          request_serializer=SeldonMessage.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )
      self.SendFeedback = channel.unary_unary(
          '/seldon.protos.Router/SendFeedback',
          request_serializer=Feedback.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )


  class RouterServicer(object):

    def Route(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendFeedback(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_RouterServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Route': grpc.unary_unary_rpc_method_handler(
            servicer.Route,
            request_deserializer=SeldonMessage.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
        'SendFeedback': grpc.unary_unary_rpc_method_handler(
            servicer.SendFeedback,
            request_deserializer=Feedback.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'seldon.protos.Router', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class TransformerStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.TransformInput = channel.unary_unary(
          '/seldon.protos.Transformer/TransformInput',
          request_serializer=SeldonMessage.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )


  class TransformerServicer(object):

    def TransformInput(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_TransformerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'TransformInput': grpc.unary_unary_rpc_method_handler(
            servicer.TransformInput,
            request_deserializer=SeldonMessage.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'seldon.protos.Transformer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class OutputTransformerStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.TransformOutput = channel.unary_unary(
          '/seldon.protos.OutputTransformer/TransformOutput',
          request_serializer=SeldonMessage.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )


  class OutputTransformerServicer(object):

    def TransformOutput(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_OutputTransformerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'TransformOutput': grpc.unary_unary_rpc_method_handler(
            servicer.TransformOutput,
            request_deserializer=SeldonMessage.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'seldon.protos.OutputTransformer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CombinerStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Aggregate = channel.unary_unary(
          '/seldon.protos.Combiner/Aggregate',
          request_serializer=SeldonMessageList.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )


  class CombinerServicer(object):

    def Aggregate(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CombinerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Aggregate': grpc.unary_unary_rpc_method_handler(
            servicer.Aggregate,
            request_deserializer=SeldonMessageList.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'seldon.protos.Combiner', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class SeldonStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Predict = channel.unary_unary(
          '/seldon.protos.Seldon/Predict',
          request_serializer=SeldonMessage.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )
      self.SendFeedback = channel.unary_unary(
          '/seldon.protos.Seldon/SendFeedback',
          request_serializer=Feedback.SerializeToString,
          response_deserializer=SeldonMessage.FromString,
          )


  class SeldonServicer(object):

    def Predict(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendFeedback(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_SeldonServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Predict': grpc.unary_unary_rpc_method_handler(
            servicer.Predict,
            request_deserializer=SeldonMessage.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
        'SendFeedback': grpc.unary_unary_rpc_method_handler(
            servicer.SendFeedback,
            request_deserializer=Feedback.FromString,
            response_serializer=SeldonMessage.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'seldon.protos.Seldon', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaGenericServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """[END Messages]

    [START Services]

    """
    def TransformInput(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def TransformOutput(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Route(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Aggregate(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendFeedback(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaGenericStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """[END Messages]

    [START Services]

    """
    def TransformInput(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    TransformInput.future = None
    def TransformOutput(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    TransformOutput.future = None
    def Route(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Route.future = None
    def Aggregate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Aggregate.future = None
    def SendFeedback(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    SendFeedback.future = None


  def beta_create_Generic_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('seldon.protos.Generic', 'Aggregate'): SeldonMessageList.FromString,
      ('seldon.protos.Generic', 'Route'): SeldonMessage.FromString,
      ('seldon.protos.Generic', 'SendFeedback'): Feedback.FromString,
      ('seldon.protos.Generic', 'TransformInput'): SeldonMessage.FromString,
      ('seldon.protos.Generic', 'TransformOutput'): SeldonMessage.FromString,
    }
    response_serializers = {
      ('seldon.protos.Generic', 'Aggregate'): SeldonMessage.SerializeToString,
      ('seldon.protos.Generic', 'Route'): SeldonMessage.SerializeToString,
      ('seldon.protos.Generic', 'SendFeedback'): SeldonMessage.SerializeToString,
      ('seldon.protos.Generic', 'TransformInput'): SeldonMessage.SerializeToString,
      ('seldon.protos.Generic', 'TransformOutput'): SeldonMessage.SerializeToString,
    }
    method_implementations = {
      ('seldon.protos.Generic', 'Aggregate'): face_utilities.unary_unary_inline(servicer.Aggregate),
      ('seldon.protos.Generic', 'Route'): face_utilities.unary_unary_inline(servicer.Route),
      ('seldon.protos.Generic', 'SendFeedback'): face_utilities.unary_unary_inline(servicer.SendFeedback),
      ('seldon.protos.Generic', 'TransformInput'): face_utilities.unary_unary_inline(servicer.TransformInput),
      ('seldon.protos.Generic', 'TransformOutput'): face_utilities.unary_unary_inline(servicer.TransformOutput),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Generic_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('seldon.protos.Generic', 'Aggregate'): SeldonMessageList.SerializeToString,
      ('seldon.protos.Generic', 'Route'): SeldonMessage.SerializeToString,
      ('seldon.protos.Generic', 'SendFeedback'): Feedback.SerializeToString,
      ('seldon.protos.Generic', 'TransformInput'): SeldonMessage.SerializeToString,
      ('seldon.protos.Generic', 'TransformOutput'): SeldonMessage.SerializeToString,
    }
    response_deserializers = {
      ('seldon.protos.Generic', 'Aggregate'): SeldonMessage.FromString,
      ('seldon.protos.Generic', 'Route'): SeldonMessage.FromString,
      ('seldon.protos.Generic', 'SendFeedback'): SeldonMessage.FromString,
      ('seldon.protos.Generic', 'TransformInput'): SeldonMessage.FromString,
      ('seldon.protos.Generic', 'TransformOutput'): SeldonMessage.FromString,
    }
    cardinalities = {
      'Aggregate': cardinality.Cardinality.UNARY_UNARY,
      'Route': cardinality.Cardinality.UNARY_UNARY,
      'SendFeedback': cardinality.Cardinality.UNARY_UNARY,
      'TransformInput': cardinality.Cardinality.UNARY_UNARY,
      'TransformOutput': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'seldon.protos.Generic', cardinalities, options=stub_options)


  class BetaModelServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Predict(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaModelStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Predict(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Predict.future = None


  def beta_create_Model_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('seldon.protos.Model', 'Predict'): SeldonMessage.FromString,
    }
    response_serializers = {
      ('seldon.protos.Model', 'Predict'): SeldonMessage.SerializeToString,
    }
    method_implementations = {
      ('seldon.protos.Model', 'Predict'): face_utilities.unary_unary_inline(servicer.Predict),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Model_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('seldon.protos.Model', 'Predict'): SeldonMessage.SerializeToString,
    }
    response_deserializers = {
      ('seldon.protos.Model', 'Predict'): SeldonMessage.FromString,
    }
    cardinalities = {
      'Predict': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'seldon.protos.Model', cardinalities, options=stub_options)


  class BetaRouterServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Route(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendFeedback(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaRouterStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Route(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Route.future = None
    def SendFeedback(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    SendFeedback.future = None


  def beta_create_Router_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('seldon.protos.Router', 'Route'): SeldonMessage.FromString,
      ('seldon.protos.Router', 'SendFeedback'): Feedback.FromString,
    }
    response_serializers = {
      ('seldon.protos.Router', 'Route'): SeldonMessage.SerializeToString,
      ('seldon.protos.Router', 'SendFeedback'): SeldonMessage.SerializeToString,
    }
    method_implementations = {
      ('seldon.protos.Router', 'Route'): face_utilities.unary_unary_inline(servicer.Route),
      ('seldon.protos.Router', 'SendFeedback'): face_utilities.unary_unary_inline(servicer.SendFeedback),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Router_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('seldon.protos.Router', 'Route'): SeldonMessage.SerializeToString,
      ('seldon.protos.Router', 'SendFeedback'): Feedback.SerializeToString,
    }
    response_deserializers = {
      ('seldon.protos.Router', 'Route'): SeldonMessage.FromString,
      ('seldon.protos.Router', 'SendFeedback'): SeldonMessage.FromString,
    }
    cardinalities = {
      'Route': cardinality.Cardinality.UNARY_UNARY,
      'SendFeedback': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'seldon.protos.Router', cardinalities, options=stub_options)


  class BetaTransformerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def TransformInput(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaTransformerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def TransformInput(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    TransformInput.future = None


  def beta_create_Transformer_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('seldon.protos.Transformer', 'TransformInput'): SeldonMessage.FromString,
    }
    response_serializers = {
      ('seldon.protos.Transformer', 'TransformInput'): SeldonMessage.SerializeToString,
    }
    method_implementations = {
      ('seldon.protos.Transformer', 'TransformInput'): face_utilities.unary_unary_inline(servicer.TransformInput),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Transformer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('seldon.protos.Transformer', 'TransformInput'): SeldonMessage.SerializeToString,
    }
    response_deserializers = {
      ('seldon.protos.Transformer', 'TransformInput'): SeldonMessage.FromString,
    }
    cardinalities = {
      'TransformInput': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'seldon.protos.Transformer', cardinalities, options=stub_options)


  class BetaOutputTransformerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def TransformOutput(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaOutputTransformerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def TransformOutput(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    TransformOutput.future = None


  def beta_create_OutputTransformer_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('seldon.protos.OutputTransformer', 'TransformOutput'): SeldonMessage.FromString,
    }
    response_serializers = {
      ('seldon.protos.OutputTransformer', 'TransformOutput'): SeldonMessage.SerializeToString,
    }
    method_implementations = {
      ('seldon.protos.OutputTransformer', 'TransformOutput'): face_utilities.unary_unary_inline(servicer.TransformOutput),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_OutputTransformer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('seldon.protos.OutputTransformer', 'TransformOutput'): SeldonMessage.SerializeToString,
    }
    response_deserializers = {
      ('seldon.protos.OutputTransformer', 'TransformOutput'): SeldonMessage.FromString,
    }
    cardinalities = {
      'TransformOutput': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'seldon.protos.OutputTransformer', cardinalities, options=stub_options)


  class BetaCombinerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Aggregate(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCombinerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Aggregate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Aggregate.future = None


  def beta_create_Combiner_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('seldon.protos.Combiner', 'Aggregate'): SeldonMessageList.FromString,
    }
    response_serializers = {
      ('seldon.protos.Combiner', 'Aggregate'): SeldonMessage.SerializeToString,
    }
    method_implementations = {
      ('seldon.protos.Combiner', 'Aggregate'): face_utilities.unary_unary_inline(servicer.Aggregate),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Combiner_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('seldon.protos.Combiner', 'Aggregate'): SeldonMessageList.SerializeToString,
    }
    response_deserializers = {
      ('seldon.protos.Combiner', 'Aggregate'): SeldonMessage.FromString,
    }
    cardinalities = {
      'Aggregate': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'seldon.protos.Combiner', cardinalities, options=stub_options)


  class BetaSeldonServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Predict(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendFeedback(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaSeldonStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Predict(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Predict.future = None
    def SendFeedback(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    SendFeedback.future = None


  def beta_create_Seldon_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('seldon.protos.Seldon', 'Predict'): SeldonMessage.FromString,
      ('seldon.protos.Seldon', 'SendFeedback'): Feedback.FromString,
    }
    response_serializers = {
      ('seldon.protos.Seldon', 'Predict'): SeldonMessage.SerializeToString,
      ('seldon.protos.Seldon', 'SendFeedback'): SeldonMessage.SerializeToString,
    }
    method_implementations = {
      ('seldon.protos.Seldon', 'Predict'): face_utilities.unary_unary_inline(servicer.Predict),
      ('seldon.protos.Seldon', 'SendFeedback'): face_utilities.unary_unary_inline(servicer.SendFeedback),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Seldon_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('seldon.protos.Seldon', 'Predict'): SeldonMessage.SerializeToString,
      ('seldon.protos.Seldon', 'SendFeedback'): Feedback.SerializeToString,
    }
    response_deserializers = {
      ('seldon.protos.Seldon', 'Predict'): SeldonMessage.FromString,
      ('seldon.protos.Seldon', 'SendFeedback'): SeldonMessage.FromString,
    }
    cardinalities = {
      'Predict': cardinality.Cardinality.UNARY_UNARY,
      'SendFeedback': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'seldon.protos.Seldon', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
